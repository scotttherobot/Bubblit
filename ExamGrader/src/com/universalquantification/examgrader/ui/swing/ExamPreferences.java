package com.universalquantification.examgrader.ui.swing;

import com.universalquantification.examgrader.ui.swing.GUIView;

/**
 * Represents application preferences.
 *
 * @author CY
 */
public class ExamPreferences extends javax.swing.JFrame
{
    GUIView application;

    /**
     * Creates new form ExamPreferences
     * @param application the application to use
     */
    public ExamPreferences(GUIView application)
    {
        initComponents();

        setLocationRelativeTo(null);

        this.application = application;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        examImagePreference = new java.awt.Checkbox();
        examCorrectAnswerDisplayPreference = new java.awt.Checkbox();
        examIncorrectAnswerDisplayPreference = new java.awt.Checkbox();

        setTitle("Bubblit Preferences");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        examImagePreference.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        examImagePreference.setLabel("Display a full image, instead of a partial image, for each test on the results webpages.");
        examImagePreference.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                examImagePreferenceItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(14, 10, 4, 10);
        getContentPane().add(examImagePreference, gridBagConstraints);

        examCorrectAnswerDisplayPreference.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        examCorrectAnswerDisplayPreference.setLabel("Display answers that were answered correctly for each test on the results webpages.");
        examCorrectAnswerDisplayPreference.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                examCorrectAnswerDisplayPreferenceItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 10);
        getContentPane().add(examCorrectAnswerDisplayPreference, gridBagConstraints);

        examIncorrectAnswerDisplayPreference.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        examIncorrectAnswerDisplayPreference.setLabel("Display answers that were answered incorrectly for each test on the results webpages.");
        examIncorrectAnswerDisplayPreference.setName(""); // NOI18N
        examIncorrectAnswerDisplayPreference.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                examIncorrectAnswerDisplayPreferenceItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 14, 10);
        getContentPane().add(examIncorrectAnswerDisplayPreference, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void examImagePreferenceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_examImagePreferenceItemStateChanged
        application.setTestImagePreference(examImagePreference.getState());
    }//GEN-LAST:event_examImagePreferenceItemStateChanged

    private void examCorrectAnswerDisplayPreferenceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_examCorrectAnswerDisplayPreferenceItemStateChanged
        application.setShowCorrectAnswerPreference(
            examCorrectAnswerDisplayPreference.getState());
    }//GEN-LAST:event_examCorrectAnswerDisplayPreferenceItemStateChanged

    private void examIncorrectAnswerDisplayPreferenceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_examIncorrectAnswerDisplayPreferenceItemStateChanged
        application.setShowIncorrectAnswerPreference(
            examIncorrectAnswerDisplayPreference.getState());
    }//GEN-LAST:event_examIncorrectAnswerDisplayPreferenceItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox examCorrectAnswerDisplayPreference;
    private java.awt.Checkbox examImagePreference;
    private java.awt.Checkbox examIncorrectAnswerDisplayPreference;
    // End of variables declaration//GEN-END:variables
}
